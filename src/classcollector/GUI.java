/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classcollector;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Tim
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }
    Math a = new Math();
    Science b = new Science();
    English c = new English();
    PrintWriter Math = null;
    PrintWriter Science = null;
    PrintWriter English = null;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UniversityName = new javax.swing.JLabel();
        CollegeOf = new javax.swing.JLabel();
        CourseName = new javax.swing.JLabel();
        TeacherName = new javax.swing.JLabel();
        Name = new javax.swing.JFormattedTextField();
        College = new javax.swing.JFormattedTextField();
        Course = new javax.swing.JFormattedTextField();
        Teacher = new javax.swing.JFormattedTextField();
        Title = new javax.swing.JLabel();
        Save = new javax.swing.JButton();
        View = new javax.swing.JButton();
        ClassRoomName = new javax.swing.JLabel();
        ClassRoom = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        choice = new javax.swing.JComboBox();
        print = new javax.swing.JComboBox();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        Delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        UniversityName.setText("University Name:");

        CollegeOf.setText("College of:");

        CourseName.setText("Course Name:");

        TeacherName.setText("Teacher Name:");

        Course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseActionPerformed(evt);
            }
        });

        Title.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        Title.setText("Course Collector");

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        View.setText("Print");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        ClassRoomName.setText("Class Room:");

        ClassRoom.setToolTipText("");

        jLabel3.setText("Category:");

        choice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Math", "Science", "English" }));

        print.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Math", "Science", "English" }));

        jFormattedTextField1.setActionCommand("<Not Set>");
        jFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Remove Class:    ");

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(print, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(View, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(choice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(CollegeOf)
                                            .addComponent(CourseName)
                                            .addComponent(TeacherName)
                                            .addComponent(ClassRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(13, 13, 13))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(UniversityName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(0, 0, 0)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(College, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Course, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Teacher, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ClassRoom, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(choice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UniversityName)
                    .addComponent(Name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CollegeOf)
                    .addComponent(College))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CourseName)
                    .addComponent(Course))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Teacher)
                    .addComponent(TeacherName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClassRoomName)
                    .addComponent(ClassRoom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Delete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(View))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseActionPerformed
        
    }//GEN-LAST:event_CourseActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed

        String university = Name.getText();
        String collegeOf = College.getText();
        String courseName = Course.getText();
        String teacherName = Teacher.getText();
        String classRoom = ClassRoom.getText();
        if("Math".equals(choice.getSelectedItem()))
        {
            a.addClass(new Class(university,collegeOf,courseName,teacherName,classRoom));
            try {
                Math = new PrintWriter("MathCourses.txt", "UTF-8");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            Math.println(a.printOutSavedClasses() + "\n");
            Math.close();
        }
        if("Science".equals(choice.getSelectedItem()))
        {
            b.addClass(new Class(university,collegeOf,courseName,teacherName,classRoom));
            try {
                Science = new PrintWriter("ScienceCourses.txt", "UTF-8");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            Science.println(b.printOutSavedClasses() + "\n");
            Science.close();
        }
        if("English".equals(choice.getSelectedItem()))
        {
            c.addClass(new Class(university,collegeOf,courseName,teacherName,classRoom));
            try {
                English = new PrintWriter("EnglishCourses.txt", "UTF-8");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            English.println(c.printOutSavedClasses() + "\n");
            English.close();
        }
        Name.setText("");
        College.setText("");
        Course.setText("");
        Teacher.setText("");
        ClassRoom.setText("");
    }//GEN-LAST:event_SaveActionPerformed
    
    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
        PrintOutGUI g = new PrintOutGUI();
        g.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        if("Math".equals(print.getSelectedItem()))
        {
            g.jTextArea1.setText("Math"+"\n");
            g.jTextArea1.append(a.printOutAllClasses());
        }
        if("Science".equals(print.getSelectedItem()))
        {
            g.jTextArea1.setText("Science"+"\n");
            g.jTextArea1.append(b.printOutAllClasses());
        }
        if("English".equals(print.getSelectedItem()))
        {
            g.jTextArea1.setText("English"+"\n");
            g.jTextArea1.append(c.printOutAllClasses());
        }
        if("All".equals(print.getSelectedItem()))
        {
            g.jTextArea1.setText("Math"+"\n");
            g.jTextArea1.append(a.printOutAllClasses());
            g.jTextArea1.append("Science"+"\n");
            g.jTextArea1.append(b.printOutAllClasses());
            g.jTextArea1.append("English"+"\n");
            g.jTextArea1.append(c.printOutAllClasses());
        }
        g.setVisible(true);
        refreshAll();
    }//GEN-LAST:event_ViewActionPerformed

    private void jFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField1ActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        String course = jFormattedTextField1.getText();
        jFormattedTextField1.setText("");
        if("Math".equals(choice.getSelectedItem()))
        {
            a.removeClass(course);
        }
        if("Science".equals(choice.getSelectedItem()))
        {
            b.removeClass(course);
        }
        if("English".equals(choice.getSelectedItem()))
        {
            c.removeClass(course);
        }
        refreshAll();
    }//GEN-LAST:event_DeleteActionPerformed
    public void refreshAll()
    {
        try {
                English = new PrintWriter("EnglishCourses.txt", "UTF-8");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            English.println(c.printOutSavedClasses() + "\n");
            English.close();
        try {
                Science = new PrintWriter("ScienceCourses.txt", "UTF-8");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            Science.println(b.printOutSavedClasses() + "\n");
            Science.close();
        try {
                Math = new PrintWriter("MathCourses.txt", "UTF-8");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            Math.println(a.printOutSavedClasses() + "\n");
            Math.close();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUI a = new GUI();
                a.setVisible(true);
                a.setMath();
                a.setScience();
                a.setEnglish();
            }
        });
    }
    public void setMath()
    {
        File file = new File("MathCourses.txt");
            try 
            {
                Scanner scanner = new Scanner(file);
                ArrayList<String> universities = new ArrayList();
                ArrayList<String> college = new ArrayList();
                ArrayList<String> course = new ArrayList();
                ArrayList<String> teacher = new ArrayList();
                ArrayList<String> room = new ArrayList();
                int count = 0;
                while (scanner.hasNextLine()) 
                {
                    String line = scanner.nextLine();
                    if(line.contains("<")) universities.add(line.substring(13));
                    if(line.contains(">")) college.add(line.substring(13));
                    if(line.contains("?")) course.add(line.substring(15));
                    if(line.contains("!")) teacher.add(line.substring(10));
                    if(line.contains("@")) room.add(line.substring(14));
                    count++;
                }
                for(int i = 0; i<course.size(); i++)
                {
                    String university = universities.get(i);
                    String collegeOf = college.get(i);
                    String courseName = course.get(i);
                    String teacherName = teacher.get(i);
                    String classRoom = room.get(i);
                    a.addClass(new Class(university, collegeOf, courseName, teacherName, classRoom));
                }
                scanner.close();
            } catch (FileNotFoundException e) {}
    }
    public void setScience()
    {
        File file = new File("ScienceCourses.txt");
            try 
            {
                Scanner scanner = new Scanner(file);
                ArrayList<String> universities = new ArrayList();
                ArrayList<String> college = new ArrayList();
                ArrayList<String> course = new ArrayList();
                ArrayList<String> teacher = new ArrayList();
                ArrayList<String> room = new ArrayList();
                int count = 0;
                while (scanner.hasNextLine()) 
                {
                    String line = scanner.nextLine();
                    if(line.contains("<")) universities.add(line.substring(13));
                    if(line.contains(">")) college.add(line.substring(13));
                    if(line.contains("?")) course.add(line.substring(14));
                    if(line.contains("!")) teacher.add(line.substring(10));
                    if(line.contains("@")) room.add(line.substring(14));
                    count++;
                }
                for(int i = 0; i<course.size(); i++)
                {
                    String university = universities.get(i);
                    String collegeOf = college.get(i);
                    String courseName = course.get(i);
                    String teacherName = teacher.get(i);
                    String classRoom = room.get(i);
                    b.addClass(new Class(university, collegeOf, courseName, teacherName, classRoom));
                }
                scanner.close();
            } catch (FileNotFoundException e) {}
    }
    public void setEnglish()
    {
        File file = new File("EnglishCourses.txt");
            try 
            {
                Scanner scanner = new Scanner(file);
                ArrayList<String> universities = new ArrayList();
                ArrayList<String> college = new ArrayList();
                ArrayList<String> course = new ArrayList();
                ArrayList<String> teacher = new ArrayList();
                ArrayList<String> room = new ArrayList();
                int count = 0;
                while (scanner.hasNextLine()) 
                {
                    String line = scanner.nextLine();
                    if(line.contains("<")) universities.add(line.substring(13));
                    if(line.contains(">")) college.add(line.substring(13));
                    if(line.contains("?")) course.add(line.substring(14));
                    if(line.contains("!")) teacher.add(line.substring(10));
                    if(line.contains("@")) room.add(line.substring(14));
                    count++;
                }
                for(int i = 0; i<course.size(); i++)
                {
                    String university = universities.get(i);
                    String collegeOf = college.get(i);
                    String courseName = course.get(i);
                    String teacherName = teacher.get(i);
                    String classRoom = room.get(i);
                    c.addClass(new Class(university, collegeOf, courseName, teacherName, classRoom));
                }
                scanner.close();
            } catch (FileNotFoundException e) {}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField ClassRoom;
    private javax.swing.JLabel ClassRoomName;
    private javax.swing.JFormattedTextField College;
    private javax.swing.JLabel CollegeOf;
    private javax.swing.JFormattedTextField Course;
    private javax.swing.JLabel CourseName;
    private javax.swing.JButton Delete;
    private javax.swing.JFormattedTextField Name;
    private javax.swing.JButton Save;
    private javax.swing.JFormattedTextField Teacher;
    private javax.swing.JLabel TeacherName;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel UniversityName;
    private javax.swing.JButton View;
    private javax.swing.JComboBox choice;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox print;
    // End of variables declaration//GEN-END:variables
}
